mat.fit_res[1,i] = fit$chisq
mat.fit_res[2,i] = length(fit$n)-1
mat.fit_res[3,i] = p_value
}
if( (length(unique(curr.gene))<=1) || (sum(curr.gene)<=1) )
{
mat.fit_res[1,i] = NA
mat.fit_res[2,i] = NA
mat.fit_res[3,i] = NA
}
}
clinical.dat = read.table("C:/Users/zding/workspace/projects/drug_sensitivity/TCGA/Clinical/2015.01.21/nationwidechildrens.org_LUAD.bio.Level_2.0.20.0/nationwidechildrens.org_clinical_patient_luad.txt",
header=T,sep="\t",quote="")
clinical.dat = clinical.dat[-c(2,3),]
clinical.dat = data.frame(clinical.dat$bcr_patient_barcode,clinical.dat$death_days_to,clinical.dat$last_contact_days_to)
clinical.dat = clinical.dat[-1,]
colnames(clinical.dat) = c("patient","death_days_to","last_contact_days_to")
days = as.numeric(as.character(clinical.dat$death_days_to))
death = vector(mode="numeric",length=length(days))
death[!is.na(days)] = 1
death[is.na(days)] = 0
days[is.na(days)] = as.numeric(as.character( clinical.dat$last_contact_days_to[is.na(days)] ))
clinical.dat = data.frame(clinical.dat,days,death)
colnames(clinical.dat) = c("patient","death_days_to","last_contact_days_to","time","death")
#View(clinical.dat)
mutation.dat = read.table("C:/Users/zding/workspace/projects/survival_analysis/data/mutation/luad.mutation.txt",
header=T,quote="",sep="\t")
mutation.pats = as.character(mutation.dat$Patient)
common.ix = match(mutation.pats,as.character(clinical.dat$patient))
mutation.pats_ix = which(!is.na(common.ix))
common.pats = mutation.pats[which(!is.na(common.ix))]
#for clinical data
clinical.dat = clinical.dat[common.ix[!is.na(common.ix)],]
#for mutation data
mutation.dat = mutation.dat[mutation.pats_ix,]
library(survival)
time = clinical.dat$time
death = clinical.dat$death
mat.fit_res = matrix(0,nrow=3,ncol=ncol(mutation.dat))
rownames(mat.fit_res) = c("chisq","degree.freedom","p.value")
for(i in 2:ncol(mutation.dat))
{
curr.gene = as.vector(as.numeric(as.character(mutation.dat[,i])))
if(( length(unique(curr.gene))>1) && (sum(curr.gene)>=2))
{
fit = survdiff(Surv(time,death)~curr.gene)
p_value = 1 - pchisq(fit$chisq,length(fit$n)-1)
mat.fit_res[1,i] = fit$chisq
mat.fit_res[2,i] = length(fit$n)-1
mat.fit_res[3,i] = p_value
}
if( (length(unique(curr.gene))<=1) || (sum(curr.gene)<=1) )
{
mat.fit_res[1,i] = NA
mat.fit_res[2,i] = NA
mat.fit_res[3,i] = NA
}
}
i
curr.gene
fit = survdiff(Surv(time,death)~curr.gene)
fit = survdiff(Surv(time,death)~as.factor(curr.gene))
which(curr.gene=1)
which(curr.gene==1)
clinical.dat[c(79,169),]
clinical.dat = clinical.dat[which(!is.na(clinical.dat$time)),]
a = matrix(c(0.1,0,0.2,0),nrow=2,ncol=2)
a
a[which(a!=0)] = 1
a
a/100
clinical.dat = read.table("C:/Users/zding/workspace/projects/drug_sensitivity/TCGA/Clinical/2015.01.21/nationwidechildrens.org_STAD.bio.Level_2.0.26.0/nationwidechildrens.org_clinical_patient_stad.txt",
header=T,sep="\t",quote="")
exp.dat = read.table("C:/Users/zding/workspace/projects/survival_analysis/data/mRNAseq/STAD.mRNAseq_RPKM_log2.txt",
header=T,sep="\t",quote="",row.names=1)
cancer="STAD"
clinical.dat = clinical.dat[-c(2,3),]
clinical.dat = data.frame(clinical.dat$bcr_patient_barcode,clinical.dat$death_days_to,clinical.dat$last_contact_days_to)
clinical.dat = clinical.dat[-1,]
colnames(clinical.dat) = c("patient","death_days_to","last_contact_days_to")
clinical.dat$death_days_to = as.numeric(as.character(clinical.dat$death_days_to))
clinical.dat$last_contact_days_to = as.numeric(as.character(clinical.dat$last_contact_days_to))
days = clinical.dat$death_days_to
days[is.na(days)] = clinical.dat$last_contact_days_to[is.na(days)]
death = vector(mode="numeric",length=length(days))
death[!is.na(clinical.dat$death_days_to)] = 1
death[is.na(clinical.dat$death_days_to)] = 0
clinical.dat = data.frame(clinical.dat,days,death)
colnames(clinical.dat) = c("patient","death_days_to","last_contact_days_to","time","death")
clinical.dat = clinical.dat[!is.na(clinical.dat$time),]
library(foreach)
library(doParallel)
no_cores = detectCores() - 1
cl = makeCluster(no_cores)
registerDoParallel(cl)
delete.ix <- foreach(i=1:nrow(exp.dat),.combine='c') %dopar%
{
curr.exp = as.numeric(as.character(exp.dat[i,]))
na_num = sum(is.na(curr.exp))
na_num.ratio = na_num / length(curr.exp)
if(na_num.ratio>=0.1)
{
return(i)
}
}
stopImplicitCluster()
stopCluster(cl)
exp.dat = exp.dat[-c(delete.ix),]
exp_pats.pre = as.character(colnames(exp.dat))
exp.pats = c()
exp.pats_ix = c()
for(i in 1:length(exp_pats.pre) )
{
tmp_str = strsplit(exp_pats.pre[i],split='\\.')
tmp_str = unlist(tmp_str)
if(tmp_str[4]=="01")
{
pat = paste(tmp_str[1],tmp_str[2],tmp_str[3],sep="-")
exp.pats = c(exp.pats,pat)
exp.pats_ix = c(exp.pats_ix,i)
}
}
exp.dat = exp.dat[,exp.pats_ix]
common.pats = intersect(as.character(clinical.dat$patient),exp.pats)
clinical.dat = clinical.dat[match(common.pats,as.character(clinical.dat$patient)),]
common.pats_ix = match(common.pats,exp.pats)
exp.dat = exp.dat[,common.pats_ix]
View(colnames(exp.dat))
View(clinical.dat$patient)
library(survival)
pvalue_mat = matrix(0,nrow=nrow(exp.dat),ncol=(3+2+4+3))
rownames(pvalue_mat) = rownames(exp.dat)
colnames(pvalue_mat) = c("mean","median","std","km.chisq","km.pvalue",
"group1.mean.time","group2.mean.time","cox.logrank",
"cox.sc","cox.wald")
#pvalue_mat.cox = matrix(0,nrow=nrow(exp.dat),ncol=3)
#create the survival object
time = clinical.dat$time
death = clinical.dat$death
pvalue_mat = matrix(0,nrow=nrow(exp.dat),ncol=(3+2+2+3))
rownames(pvalue_mat) = rownames(exp.dat)
colnames(pvalue_mat) = c("mean","median","std","km.chisq","km.pvalue",
"group1.mean.time","group2.mean.time","cox.logrank",
"cox.sc","cox.wald")
time = clinical.dat$time
death = clinical.dat$death
for(i in 1:nrow(exp.dat))
{
#mean, median, and std
curr.exp = as.numeric(as.character(exp.dat[i,]))
pvalue_mat[i,1] = mean(curr.exp,na.rm=T)
pvalue_mat[i,2] = median(curr.exp,na.rm=T)
pvalue_mat[i,3] = sd(curr.exp,na.rm=T)
#Kaplan Meier, group and test
median_num = pvalue_mat[i,2]
curr.exp_new = vector(length=length(curr.exp),mode="numeric")
curr.exp_new[curr.exp>=median_num] = 1
curr.exp_new[curr.exp<median_num] = 0
curr.exp_new[is.na(curr.exp)] = NA
if( sum(death[curr.exp_new==1],na.rm=T)>=1 )
{
fit = survdiff(Surv(time,death)~curr.exp_new)
p_value = 1 - pchisq(fit$chisq,length(fit$n)-1)
pvalue_mat[i,4] = fit$chisq
pvalue_mat[i,5] = p_value
pvalue_mat[i,6] = mean(death[curr.exp_new==1],na.rm=T)
pvalue_mat[i,7] = mean(death[curr.exp_new==0],na.rm=T)
}
if(sum(death[curr.exp_new==1],na.rm=T)==0 )
{
pvalue_mat[i,4] = NA
pvalue_mat[i,5] = NA
pvalue_mat[i,5] = NA
pvalue_mat[i,7] = NA
}
#Cox regression
coxph.fit = coxph(Surv(time,death)~curr.exp,na.action="na.omit")
coxph.sum = summary(coxph.fit)
p.value = c(coxph.sum$logtest[3], coxph.sum$sctest[3], coxph.sum$waldtest[3])
pvalue_mat[i,8] = p.value[1]
pvalue_mat[i,9] = p.value[2]
pvalue_mat[i,10] = p.value[3]
}
warnings()
plot(pvalue_mat[,5],pvalue_mat[,8],main="KM against Cox sctest",
xlab="KM",ylab="Cox",type="p")
plot(pvalue_mat[,5],pvalue_mat[,9],main="KM against Cox sctest",
xlab="KM",ylab="Cox",type="p")
plot(pvalue_mat[,5],pvalue_mat[,10],main="KM against Cox sctest",
xlab="KM",ylab="Cox",type="p")
plot(pvalue_mat[,5],pvalue_mat[,8],main="KM against Cox sctest",
xlab="KM",ylab="Cox",type="h")
file_name = file_name = paste("survival.",cancer,".mRNAseq.20150603.txt",sep="")
write.table(pvalue_mat,file_name,col.names=T,row.names=T,quote=F,sep="\t")
pvalue_mat= pvalue_mat[order(pvalue_mat[,5],decreasing=F),]
file_name = file_name = paste("survival.",cancer,".mRNAseq.20150603.txt",sep="")
write.table(pvalue_mat,file_name,col.names=T,row.names=T,quote=F,sep="\t")
pmatch("EREG",rownames(exp.dat))
pmatch("EREG",rownames(pvalue_mat))
exp.dat = read.table("C:/Users/zding/workspace/projects/survival_analysis/data/rppa/gdac.broadinstitute.org_COAD.RPPA_AnnotateWithGene.Level_3.2014120600.0.0/COAD.rppa.txt",
header=T,sep="\t",quote="",row.names=1)
clinical.dat = read.table("C:/Users/zding/workspace/projects/drug_sensitivity/TCGA/Clinical/2015.01.21/nationwidechildrens.org_COAD.bio.Level_2.0.18.0/nationwidechildrens.org_clinical_patient_coad.txt",
header=T,sep="\t",quote="")
exp.dat = read.table("C:/Users/zding/workspace/projects/survival_analysis/data/rppa/gdac.broadinstitute.org_COAD.RPPA_AnnotateWithGene.Level_3.2014120600.0.0/COAD.rppa.txt",
header=T,sep="\t",quote="",row.names=1)
cancer="COAD"
clinical.dat = clinical.dat[-c(2,3),]
clinical.dat = data.frame(clinical.dat$bcr_patient_barcode,clinical.dat$death_days_to,clinical.dat$last_contact_days_to)
clinical.dat = clinical.dat[-1,]
colnames(clinical.dat) = c("patient","death_days_to","last_contact_days_to")
clinical.dat$death_days_to = as.numeric(as.character(clinical.dat$death_days_to))
clinical.dat$last_contact_days_to = as.numeric(as.character(clinical.dat$last_contact_days_to))
days = clinical.dat$death_days_to
days[is.na(days)] = clinical.dat$last_contact_days_to[is.na(days)]
death = vector(mode="numeric",length=length(days))
death[!is.na(clinical.dat$death_days_to)] = 1
death[is.na(clinical.dat$death_days_to)] = 0
clinical.dat = data.frame(clinical.dat,days,death)
colnames(clinical.dat) = c("patient","death_days_to","last_contact_days_to","time","death")
clinical.dat = clinical.dat[!is.na(clinical.dat$time),]
#View(clinical.dat)
#filter mRNA-seq data
library(foreach)
library(doParallel)
no_cores = detectCores() - 1
cl = makeCluster(no_cores)
registerDoParallel(cl)
delete.ix <- foreach(i=1:nrow(exp.dat),.combine='c') %dopar%
{
curr.exp = as.numeric(as.character(exp.dat[i,]))
na_num = sum(is.na(curr.exp))
na_num.ratio = na_num / length(curr.exp)
if(na_num.ratio>=0.1)
{
return(i)
}
}
stopImplicitCluster()
stopCluster(cl)
if( length(delete.ix)>0 )
{
exp.dat = exp.dat[-c(delete.ix),]
}
exp_pats.pre = as.character(colnames(exp.dat))
exp.pats = c()
exp.pats_ix = c()
for(i in 1:length(exp_pats.pre) )
{
tmp_str = strsplit(exp_pats.pre[i],split='\\.')
tmp_str = unlist(tmp_str)
if(tmp_str[4]=="01")
{
pat = paste(tmp_str[1],tmp_str[2],tmp_str[3],sep="-")
exp.pats = c(exp.pats,pat)
exp.pats_ix = c(exp.pats_ix,i)
}
}
exp.dat = exp.dat[,exp.pats_ix]
View(exp.dat)
exp.dat = read.table("C:/Users/zding/workspace/projects/survival_analysis/data/rppa/gdac.broadinstitute.org_COAD.RPPA_AnnotateWithGene.Level_3.2014120600.0.0/COAD.rppa.txt",
header=T,sep="\t",quote="",row.names=1)
VIew(exp.dat)
View(exp.dat)
exp_pats.pre = as.character(colnames(exp.dat))
exp.pats = c()
exp.pats_ix = c()
for(i in 1:length(exp_pats.pre) )
{
tmp_str = strsplit(exp_pats.pre[i],split='\\.')
tmp_str = unlist(tmp_str)
if(tmp_str[4]=="01")
{
pat = paste(tmp_str[1],tmp_str[2],tmp_str[3],sep="-")
exp.pats = c(exp.pats,pat)
exp.pats_ix = c(exp.pats_ix,i)
}
}
exp.dat = exp.dat[,exp.pats_ix]
exp.pats
exp_pats.pre
tmp_str
pmatch("01",tmp_str[4])
exp.dat = read.table("C:/Users/zding/workspace/projects/survival_analysis/data/rppa/gdac.broadinstitute.org_COAD.RPPA_AnnotateWithGene.Level_3.2014120600.0.0/COAD.rppa.txt",
header=T,sep="\t",quote="",row.names=1)
exp_pats.pre = as.character(colnames(exp.dat))
exp.pats = c()
exp.pats_ix = c()
for(i in 1:length(exp_pats.pre) )
{
tmp_str = strsplit(exp_pats.pre[i],split='\\.')
tmp_str = unlist(tmp_str)
if(!is.na(pmatch("01",tmp_str[4])))
{
pat = paste(tmp_str[1],tmp_str[2],tmp_str[3],sep="-")
exp.pats = c(exp.pats,pat)
exp.pats_ix = c(exp.pats_ix,i)
}
}
exp.dat = exp.dat[,exp.pats_ix]
common.pats = intersect(as.character(clinical.dat$patient),exp.pats)
clinical.dat = clinical.dat[match(common.pats,as.character(clinical.dat$patient)),]
common.pats_ix = match(common.pats,exp.pats)
exp.dat = exp.dat[,common.pats_ix]
common.pats
library(survival)
pvalue_mat = matrix(0,nrow=nrow(exp.dat),ncol=(3+2+2+3))
rownames(pvalue_mat) = rownames(exp.dat)
colnames(pvalue_mat) = c("mean","median","std","km.chisq","km.pvalue",
"group1.mean.death","group2.mean.death","cox.logrank",
"cox.sc","cox.wald")
#pvalue_mat.cox = matrix(0,nrow=nrow(exp.dat),ncol=3)
#create the survival object
time = clinical.dat$time
death = clinical.dat$death
for(i in 1:nrow(exp.dat))
{
#mean, median, and std
curr.exp = as.numeric(as.character(exp.dat[i,]))
pvalue_mat[i,1] = mean(curr.exp,na.rm=T)
pvalue_mat[i,2] = median(curr.exp,na.rm=T)
pvalue_mat[i,3] = sd(curr.exp,na.rm=T)
#Kaplan Meier, group and test
median_num = pvalue_mat[i,2]
curr.exp_new = vector(length=length(curr.exp),mode="numeric")
curr.exp_new[curr.exp>=median_num] = 1
curr.exp_new[curr.exp<median_num] = 0
curr.exp_new[is.na(curr.exp)] = NA
if( sum(death[curr.exp_new==1],na.rm=T)>=1 )
{
fit = survdiff(Surv(time,death)~curr.exp_new)
p_value = 1 - pchisq(fit$chisq,length(fit$n)-1)
pvalue_mat[i,4] = fit$chisq
pvalue_mat[i,5] = p_value
pvalue_mat[i,6] = mean(death[curr.exp_new==1],na.rm=T)
pvalue_mat[i,7] = mean(death[curr.exp_new==0],na.rm=T)
}
if(sum(death[curr.exp_new==1],na.rm=T)==0 )
{
pvalue_mat[i,4] = NA
pvalue_mat[i,5] = NA
pvalue_mat[i,5] = NA
pvalue_mat[i,7] = NA
}
#Cox regression
coxph.fit = coxph(Surv(time,death)~curr.exp,na.action="na.omit")
coxph.sum = summary(coxph.fit)
p.value = c(coxph.sum$logtest[3], coxph.sum$sctest[3], coxph.sum$waldtest[3])
pvalue_mat[i,8] = p.value[1]
pvalue_mat[i,9] = p.value[2]
pvalue_mat[i,10] = p.value[3]
}
plot(pvalue_mat[,5],pvalue_mat[,8],main="KM against Cox logrank",
xlab="KM",ylab="Cox",type="p")
plot(pvalue_mat[,5],pvalue_mat[,9],main="KM against Cox sctest",
xlab="KM",ylab="Cox",type="p")
plot(pvalue_mat[,5],pvalue_mat[,10],main="KM against Cox wald",
xlab="KM",ylab="Cox",type="p")
library(ROCR)
data(ROCR.simple)
pred <- prediction( ROCR.simple$predictions, ROCR.simple$labels)
pred@predictions
is.list(pred@predictions)
length(pred@predictions)
a@m = list()
?S4
?S4-class
length(pred@predictions[[1]])
length(pred@labels[[1]])
View(pred)
?prediction-class
?prediction-class
a = prediction-class()
a <- prediction()
pred@predictions[[1]] = list()
pred@predictions[[1]]
pred <- prediction( ROCR.simple$predictions, ROCR.simple$labels)
pred@cutoffs
pred@fp
pred@tp
pred@tp[[1]]
pred@tn[[1]]
pred@fn[[1]]
pred@predictions
min(pred@predictions[[1]])
min(pred@cutoffs[[1]])
max(pred@cutoffs[[1]])
max(pred@predictions[[1]])
View(pred@cutoffs[[1]])
View(sort(pred@predictions[[1]]))
View(sort(pred@predictions[[1]],decreasing=T))
pred@labels
View(ROCR.simple$labels)
View(pred@predictions[[1]])
perf <- performance(pred,"tpr","fpr")
perf@x.name
perf@y.name
perf@alpha.name
perf@x.values
inf
a = inf
a = INF
?inf
a = inf()
install.packages("NMF")
library(NMF)
n <- 50; counts <- c(5, 5, 8);
V <- syntheticNMF(n, counts)
View(v)
View(V)
dim(V)
?syntheticNMF
res <- nmf(V, 3)
basismap(res)
coefmap(res)
?nmf
library(reshape2)
library(ggplot2)
library(plyr)
library(gplots)
###functions###
impute_NA <- function(train_dat,gene_num)
{
#input data: row as genes and col as samples
#output data:row as genes and col as samples
#usage: before glmnet function
curr_train = train_dat[1:gene_num,]
mean_nums = rowMeans( curr_train,na.rm=T )
for(i in 1:nrow(train_dat))
{
train_na = which( is.na(train_dat[i,]) )
if( length(train_na)>0)
{
curr_train[i,train_na] = mean_nums[i]
}
}
train_dat[1:gene_num,] = curr_train
return(train_dat)
}
###load data###
setwd("bin.algo/present_results")
genes_pre = read.table("C:/Users/zding/workspace/projects/drug_sensitivity/bin.algo/mRNASeq/elastic_net.logistic/pan.elanet.feature.full.20150701.txt",
header=F,row.names=1,sep="\t",quote="")
cisplatin.dat = read.table("C:/Users/zding/workspace/projects/drug_sensitivity/data/omics.drug_centric/mRNAseq/cisplatin.mRNAseq.gdac_20141206.preprocess.txt",
header=T,row.names=1,sep="\t",quote="")
cisplatin.info = read.table("C:/Users/zding/workspace/projects/drug_sensitivity/data/omics.drug_centric/mRNAseq/cisplatin.mRNAseq_fold_cv.mat.txt",
sep="\t",header=T,quote="")
res = nmf(as.matrix(cisplatin.dat),3)
2^
1
res = nmf(as.matrix(z^cisplatin.dat),3)
res = nmf(as.matrix(2^cisplatin.dat),3)
basismap(res)
basismap(res)
setwd("C:/Users/zding/workspace/projects/drug_sensitivity/results/omics_feature/miRNAseq/elastic_net")
molecular = read.table("molecular_only.txt",header=T,row.names=NULL,sep="\t")
molecular_cancer = read.table("combine_molecular_cancer_type.txt",header=T,row.names=NULL,sep="\t")
cancer = read.table("cancer_type_only.txt",header=T,row.names=NULL,sep="\t")
tiff("molecular_cancer_comparision.tiff")
plot(molecular[,2],molecular[,1],col="red",lty=1,"l",
xlab="False Positive Rate",ylab="True Positive Rate")
lines(cancer[,2],cancer[,1],col="green",lty=1,"l")
lines(molecular_cancer[,2],molecular_cancer[,1],col="black",lty=1,"l")
lines(seq(0,1,by=0.1),seq(0,1,by=0.1),lty=2,"l",col="gray")
legend("topleft",lty=c(1,1,1,2),col=c("red","green","black","gray") ,
legend=c("molcular only","cancer type only","both","random"))
title("Pan-cancer Classification of Drug response","RNA-seq")
dev.off()
tiff("molecular_cancer_comparision.tiff")
plot(molecular[,2],molecular[,1],col="red",lty=1,"l",
xlab="False Positive Rate",ylab="True Positive Rate")
lines(cancer[,2],cancer[,1],col="green",lty=1,"l")
lines(molecular_cancer[,2],molecular_cancer[,1],col="black",lty=1,"l")
lines(seq(0,1,by=0.1),seq(0,1,by=0.1),lty=2,"l",col="gray")
legend("topleft",lty=c(1,1,1,2),col=c("red","green","black","gray") ,
legend=c("molcular only","cancer type only","both","random"))
title("Pan-cancer Classification of Drug response","miRNA-seq")
dev.off()
setwd("C:/Users/zding/workspace/projects/drug_sensitivity/bin.algo/mRNASeq/elastic_net.logistic")
molecular = read.table("molecular_only.txt",header=T,row.names=NULL,sep="\t")
molecular_cancer = read.table("combine_molecular_cancer_type.txt",header=T,row.names=NULL,sep="\t")
as.numeric(as.character(1))
library(NMF)
X <- syntheticNMF(100, 3, 20, noise = 2)
n <- nrow(X)
d <- rnorm(n)
e <- unlist(mapply(rep, c("X", "Y", "Z"), 10))
e <- c(e, rep(NA, n - length(e)))
rdata <- data.frame(Var = d, Type = e)
# column annotations and covariates
p <- ncol(X)
a <- sample(c("alpha", "beta", "gamma"), p, replace = TRUE)
c <- rnorm(p)
covariates <- data.frame(a, X$pData, c)
aheatmap(X, annCol = covariates, annRow = X$fData)
View(covariates)
?model.matrix
genes = read.table("C:/Users/zding/workspace/projects/drug_sensitivity/data/gene_sets/text_mining/LMMA/result_protein_coding.txt",header=T,sep="\t",quote="")
sum(genes$count!=0)
hist(genes$count,100)
max(genes$count)
View(genes$count[order(genes$count,decreasing=T)])
View(genes[order(genes$count,decreasing=T),])
sum(genes$count==1)
sum(genes$count==2)
sum(genes$count>=2)
genes_thresh = genes$Gene[genes$count>=1]
genes_thresh = genes$Gene[genes$count>=2]
length(genes_thresh)
write.table("cisplatin_gene.pubmed.hugo.20150825.txt")
write.table(genes_thresh,"cisplatin_gene.pubmed.hugo.20150825.txt",sep="\t",quote=F,row.names=F,col.names=F)
View(genes)
?sd
