library(caret)
set.seed(1)
dat <- twoClassSim(1000, intercept = -50,linearVars=1000,noiseVars=50,corrVars=10)
datpart = createDataPartition(y=dat$Class, times=1, p=0.5, list=F)
train.dat = dat[datpart[,1],]
test.dat = dat[-datpart[,1],]
table(training$Class)
training = dat[datpart[,1],]
testing = dat[-datpart[,1],]
table(training$Class)
nmin <- nrow(training)/2
mintraining = training[training$Class=="Class2",]
training = rbind(training,mintraining,mintraining, mintraining)
ctrl <- trainControl(method = "cv",
classProbs = TRUE,
summaryFunction = twoClassSummary)
library(doParallel)
library(foreach)
cl = makeCluster(no_cores)
registerDoParallel(cl)
set.seed(2)
no_cores = detectCores()
cl = makeCluster(no_cores)
registerDoParallel(cl)
set.seed(2)
library(randomForest);library(pROC)
rfDownsampled <- train(Class ~ ., data = training,
method = "rf",
ntree = 1500,
tuneLength = 5,
metric = "ROC",
trControl = ctrl,
## Tell randomForest to sample by strata. Here,
## that means within each class
strata = training$Class,
## Now specify that the number of samples selected
## within each class should be the same
sampsize = rep(nmin, 2),
importance=T)
